apiVersion: apps/v1beta2
kind: StatefulSet
metadata:
  name: alertmanager
  namespace: ${NAMESPACE}
  labels: &Labels
    k8s-app: alertmanager
    app.kubernetes.io/name: prometheus
    app.kubernetes.io/component: alertmanager
spec:
  serviceName: "alertmanager-operated"
  replicas: 2
  podManagementPolicy: OrderedReady
  updateStrategy:
    type: RollingUpdate
  revisionHistoryLimit: 10
  selector:
    matchLabels: *Labels
  template:
    metadata:
      labels: *Labels
    spec:
      serviceAccountName: alertmanager
      containers:
        - name: alertmanager
          image: learninghub/alertmanager:v1.0
          imagePullPolicy: Always
          args:
            - --config.file=/etc/config/alertmanager.yml
            - --storage.path=/data
            - --web.listen-address=:9093
            - --web.route-prefix=/
            - --mesh.listen-address=$(POD_IP):6783
            - --mesh.peer=alertmanager-0.alertmanager-operated.${NAMESPACE}.svc:6783
            - --mesh.peer=alertmanager-1.alertmanager-operated.${NAMESPACE}.svc:6783
            - --log.level=debug
          env:
          - name: POD_IP
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: status.podIP
          ports:
            - containerPort: 9093
              name: http
            - containerPort: 6783
              name: mesh
          readinessProbe:
            httpGet:
              path: /#/status
              port: 9093
            initialDelaySeconds: 30
            timeoutSeconds: 30
          volumeMounts:
            - name: config-volume
              mountPath: /etc/config
            - name: alertmanager-data
              mountPath: "/data"
              subPath: ""
          #resources:
            #limits:
              #cpu: 10m
              #memory: 50Mi
            #requests:
              #cpu: 10m
              #memory: 50Mi
      volumes:
        - name: config-volume
          configMap:
            name: alertmanager-config
      affinity:
        podAntiAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
          - labelSelector:
              matchExpressions:
              - key: k8s-app
                operator: In
                values:
                - alertmanager
            topologyKey: "kubernetes.io/hostname"
  volumeClaimTemplates:
  - metadata:
      name: alertmanager-data
    spec:
      storageClassName: ${STORAGE_CLASS}
      accessModes:
        - ReadWriteOnce
      resources:
        requests:
          storage: "2Gi"